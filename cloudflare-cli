#!/bin/sh
# -*- sh-basic-offset:4; indent-tabs-mode:nil -*- vi: set sw=4 et:

# MIT License
#
# Copyright (c) 2016 Earl Chew

set -eu

[ -z "${0##*/*}" ] || exec "$PWD/$0" "$@"

. "${0%/*}"/cloudflare-cli.sh

usage()
{
    {
        print "Usage: $0 auth zone type name [ = [ content ] ]"
        print "Arguments:"
        print "  auth     Authorisation type - Bearer, Service, user@home.com"
        print "  zone     Zone for action"
        print "  type     Type of DNS record"
        print "  name     Name of DNS record"
        print "  content  Content of DNS record"
        print "Examples:"
        print "  Read A record for www.company.com"
        print "    $0 Bearer company.com A www < token"
        print "  Write A record for company.com"
        print "    $0 user@example.com company.com A @ = 10.4.12.3 < token"
        print "  Delete TXT record for test.company.com"
        print "    $0 user@example.com company.com TXT test = < token"
    } >&2
    exit 1
}

main()
{
    [ $# -lt 1 ] || [ x"$1" != x"--debug" ] || { set -x ; shift ; }

    [ $# -ge 4 -a $# -le 6 ] &&
    { [ $# -lt 5 ] || [ x"$5" = x"=" ] ; } || usage

    local AUTH=$1 ; shift
    local ZONE=$1 ; shift
    local TYPE=$1 ; shift
    local NAME=$1 ; shift

    # Read the secret token from stdin so that it is not exposed
    # on the command line.

    local TOKEN
    read -r TOKEN

    if [ $# -eq 0 ] ; then
	cloudflareRead "$AUTH" "$TOKEN" "$ZONE" "$TYPE" "$NAME" ||
	    fail "Unable to read $NAME $TYPE record in zone $ZONE"
    elif [ $# -eq 2 ] ; then
	cloudflareWrite "$AUTH" "$TOKEN" "$ZONE" "$TYPE" "$NAME" "$2" ||
	    fail "Unable to write $NAME $TYPE record in zone $ZONE"
    else
	cloudflareDelete "$AUTH" "$TOKEN" "$ZONE" "$TYPE" "$NAME" ||
	    fail "Unable to delete $NAME $TYPE record in zone $ZONE"
    fi
}

main "$@"
